import { apply, Update } from './game-state-changer';

// created on an ongoing basis
const basicResources = {
	catnip: 0,
	wood: 0,
	minerals: 0,
	coal: 0,
	iron: 0,
	titanium: 0,
	uranium: 0,
	unobtainium: 0,
	gold: 0,
	oil: 0,
	catpower: 0,
	science: 0,
	culture: 0,
	faith: 0,
	unicorn: 0,
	alicorn: 0,
	necrocorn: 0,
	antimatter: 0,
};

/* these resources are created on command and have unlimited storage */
const convertedResources = {
	iron: 0,
	titanium: 0,
	starchart: 0,
	uranium: 0,
	unobtainium: 0,
	eludium: 0,
	fur: 0,
	ivory: 0,
	beam: 0,
	slab: 0,
	concrete: 0,
	plate: 0,
	steel: 0,
	gear: 0,
	alloy: 0,
	scaffold: 0,
	kerosene: 0,
	parchment: 0,
	manuscript: 0,
	compendium: 0,
	blueprint: 0,
	megalith: 0,
	tear: 0,
	sorrow: 0,
	timecrystal: 0,
	relic: 0,
};

const initialGameState = {
	workers: {
		farmer: 0,
		woodcutter: 0,
		miner: 0,
		hunter: 0,
		scholar: 0,
		priest: 0,
		geologist: 0,
	},
	conversionProportion: {
		...convertedResources
	},
	luxury: {
		fur: false,
		ivory: false,
		unicorn: false,
		alicorn: false,
	},
	faith: {
		stored: 0,
		previouslyStored: 0,
		apocryphaPoints: 0,
		transcendenceLevel: 0,
	},
	level: {
		// normal buildings
		CatnipField: 0,
		Pasture: 0,
		SolarFarm: 0,
		Aqueduct: 0,
		HydroPlant: 0,
		Hut: 0,
		LogHouse: 0,
		Mansion: 0,
		Library: 0,
		DataCenter: 0,
		Academy: 0,
		Observatory: 0,
		BioLab: 0,
		Barn: 0,
		Warehouse: 0,
		Harbor: 0,
		Mine: 0,
		Quarry: 0,
		LumberMill: 0,
		OilWell: 0,
		Accelerator: 0, 
		Steamworks: 0,
		Magneto: 0,
		Smelter: 0,
		Calciner: 0,
		Factory: 0,
		Reactor: 0,
		Amphitheatre: 0,
		BroadcastTower: 0,
		Chapel: 0,
		Temple: 0,
		Workshop: 0,
		TradePost: 0,
		Mint: 0,
		UnicornPasture: 0,
		Ziggurat: 0,
	
		// unicorn buildings
		UnicornTomb: 0,
		IvoryTower: 0,
		IvoryCitadel: 0,
		SkyPalace: 0,
		UnicornUtopia: 0,
		SunSpire: 0,
		Marker: 0,
		BlackPyramid: 0,

		// order of the sun
		SolarChant: 0,
		Scholasticism: 0,
		GoldenSpire: 0,
		SunAltar: 0,
		StainedGlass: 0,
		Basilica: 0,
		Templars: 0,

		// space buildings
		SpaceElevator: 0,
		Satellite: 0,
		SpaceStation: 0,
		LunarOutpost: 0,
		MoonBase: 0,
		PlanetCracker: 0,
		HydraulicFracturer: 0,
		SpiceRefinery: 0,
		ResearchVessel: 0,
		OrbitalArray: 0,
		Sunlifter: 0,
		ContainmentChamber: 0,
		HeatSink: 0,
		Sunforge: 0,
		Cryostation: 0,
		SpaceBeacon: 0,
		TerraformingStation: 0,
		Hydroponics: 0,
	},
	active: {
		Calciner: true,
		Steamworks: true,	
	},
	upgrades: {
		// same order as http://bloodrizer.ru/games/kittens/wiki/index.php?page=workshop
		MineralHoes: false,
		IronHoes: false,
		MineralAxe: false,
		IronAxe: false,
		SteelAxe: false,
		ReinforcedSaw: false,
		SteelSaw: false,
		TitaniumSaw: false,
		AlloySaw: false,
		TitaniumAxe: false,
		AlloyAxe: false,
		ExpandedBarns: false,
		ReinforcedBarns: false,
		ReinforcedWarehouses: false,
		TitaniumBarns: false,
		AlloyBarns: false,
		ConcreteBarns: false,
		TitaniumWarehouses: false,
		AlloyWarehouses: false,
		ConcreteWarehouses: false,
		StorageBunkers: false,
		EnergyRifts: false,
		StasisChambers: false,
		VoidEnergy: false,
		DarkEnergy: false,
		TachyonAccelerators: false,
		LHC: false,
		PhotovoltaicCells: false,
		ThinFilmCells: false,
		SolarSatellites: false,
		ExpandedCargo: false,
		ReactorVessel: false,
		IronWoodHuts: false,
		ConcreteHuts: false,
		UnobtainiumHuts: false,
		EludiumHuts: false,
		Silos: false,
		Refrigeration: false,
		CompositeBow: false,
		Crossbow: false,
		Railgun: false,
		Bolas: false,
		HuntingArmor: false,
		SteelArmor: false,
		AlloyArmor: false,
		Nanosuits: false,
		Geodesy: false,
		ConcretePillars: false,
		MiningDrill: false,
		UnobtainiumDrill: false,
		CoalFurnace: false,
		DeepMining: false,
		Pyrolysis: false,
		ElectrolyticSmelting: false,
		Oxidation: false,
		RotaryKiln: false,
		FluidizedReactors: false,
		NuclearSmelters: false,
		OrbitalGeodesy: false,
		PrintingPress: false,
		OffsetPress: false,
		Photolithography: false,
		Uplink: false,
		Starlink: false,
		Cryocomputing: false,
		HighPressureEngine: false,
		FuelInjectors: false,
		FactoryLogistics: false,
		SpaceManufacturing: false,
		Astrolabe: false,
		TitaniumReflectors: false,
		UnobtainiumReflectors: false,
		EludiumReflectors: false,
		HydroPlantTurbines: false,
		AntimatterBases: false,
		AntimatterFission: false,
		AntimatterDrive: false,
		AntimatterReactors: false,
		Pumpjack: false,
		BiofuelProcessing: false,
		UnicornSelection: false,
		GMCatnip: false,
		CADsystem: false,
		SETI: false,
		Logistics: false,
		Augmentations: false,
		EnrichedUranium: false,
		ColdFusion: false,
		OilRefinery: false,
		HubbleSpaceTelescope: false,
		AstroPhysicists: false,
		MicroWarpReactors: false,
		PlanetBuster: false,
		OilDistillation: false,
		FactoryProcessing: false,
		Telecommunication: false,
		RoboticAssistance: false,

		SolarRevolution: false,
		Transcendence: false,
	},
	metaphysic: {
		Engineering: false,
		Diplomacy: false,
		GoldenRatio: false,
		DivineProportion: false,
		VitruvianFeline: false,
		Renaissance: false,
		CodexVox: false,
		Chronomancy: false,
		Astromancy: false,
	},
	researched: {
		Calendar: false,
		Agriculture: false,
		Archery: false,
		AnimalHusbandry: false,
		Mining: false,
		MetalWorking: false,
		Mathematics: false,
		Construction: false,
		CivilService: false,
		Engineering: false,
		Currency: false,
		Writing: false,
		Philosophy: false,
		Steel: false,
		Machinery: false,
		Theology: false,
		Astronomy: false,
		Navigation: false,
		Architecture: false,
		Physics: false,
		Metaphysics: false,
		Chemistry: false,
		Acoustics: false,
		Geology: false,
		DramaAndPoetry: false,
		Electricity: false,
		Biology: false,
		Biochemistry: false,
		Genetics: false,
		Industrialization: false,
		Mechanization: false,
		Combustion: false,
		Metallurgy: false,
		Ecology: false,
		Electronics: false,
		Robotics: false,
		ArtificialIntelligence: false,
		QuantumCryptography: false,
		Blackchain: false,
		NuclearFission: false,
		Rocketry: false,
		OilProcessing: false,
		Satellites: false,
		OrbitalEngineering: false,
		Thorium: false,
		Exogeology: false,
		AdvancedExogeology: false,
		Nanotechnology: false,
		Superconductors: false,
		Antimatter: false,
		Terraformation: false,
		HydroPonics: false, // weird spelling to avoid name clash with building
		Exophysics: false,
		ParticlePhysics: false,
		DimensionalPhysics: false,
		Chronophysics: false,
		TachyonTheory: false,
		Cryptotheology: false,
		VoidSpace: false,
		ParadoxTheory: false,
	
		// space missions
		OrbitalLaunch: false,
		MoonMission: false,
		DuneMission: false,
		PiscineMission: false,
		HeliosMission: false,
		TMinusMission: false,
		KairoMission: false,
		RorschachMission: false,
		YarnMission: false,
		UmbraMission: false,
		CharonMission: false,
		CentaurusMission: false,
		FurthestRingMission: false,	
	},
	priceMarkup: {
		iron: 1,
		coal: 1,
		gold: 1,
		oil: 1,
		culture: 1,
		faith: 1,
		starchart: 1,
		blueprint: 1,
		uranium: 1,
		unobtainium: 1,
		unicorn: 1,
		alicorn: 1,
		necrocorn: 1,
		antimatter: 1,
		sorrow: 1,
		timecrystal: 1,
	},
	showResearchedUpgrades: true,
	compendia: 0,
	ships: 0,
	karma: 0,
	paragon: 0,
	leviathanEnergy: 0,
	extraKittens: 0,
	notes: "",
}

export type GameState = typeof initialGameState;
export type GameStateUpdate = Update<GameState>;
export const state = initialGameState;

const savedState: GameStateUpdate = localStorage.kittensGameState ? JSON.parse(localStorage.kittensGameState) : {};
apply(state, savedState);
window["state"] = state; // helpful for debugging

export function saveGameState() {
	localStorage.kittensGameState = JSON.stringify(state);
}

export function replaceGameState(newState: GameStateUpdate) {
	localStorage.kittensGameState = JSON.stringify(newState);
	window.location.reload();
}

function keyNames<T>(o: T): Array<keyof T> {
	const keys : Array<keyof T> = <any>[];
	for (let k in o) {
		keys.push(k);
	}
	return keys;
}

export type BasicRes = keyof typeof basicResources;
export const basicResourceNames = keyNames(basicResources);

export type ConvertedRes = keyof typeof convertedResources;
export const convertedResourceNames = keyNames(convertedResources);

export type UserPricedRes = keyof typeof state.priceMarkup;
export const userPricedResourceNames = keyNames(state.priceMarkup);

export type Res = BasicRes | ConvertedRes;
export const resourceNames = [...basicResourceNames, ...convertedResourceNames];

export type Job = keyof typeof state.workers;
export const jobNames = keyNames(state.workers);

export type Building = keyof typeof state.level;
export const buildingNames = keyNames(state.level);
export type ActivatableBuilding = keyof typeof state.active;
export const activatableBuildingNames = keyNames(state.active);

export type Upgrade = keyof typeof state.upgrades;
export type Metaphysic = keyof typeof state.metaphysic;
export type Science = keyof typeof state.researched;